#ifndef MAP_H
#define MAP_H

#include "EntityModel.h"
#include "PlayerModel.h"
#include "PrintableModel.h"
#include "TileModel.h"

///////////////////////////////////////////////////////////////////
/// @class MapModel
///
/// defines a map and the walls and entities within
///////////////////////////////////////////////////////////////////
class MapModel : public PrintableModel
{
private:
   std::vector<TileModel> m_allTiles;

   ///////////////////////////////////////////////////////////////////
   /// @fn initialize
   ///////////////////////////////////////////////////////////////////
   void initialize();

public:
   ///////////////////////////////////////////////////////////////////
   /// @fn MapModel
   ///////////////////////////////////////////////////////////////////
   MapModel();

   ///////////////////////////////////////////////////////////////////
   /// @fn MapModel
   ///
   /// @param sprite
   /// @param alias
   ///////////////////////////////////////////////////////////////////
   MapModel(SpriteModel sprite, std::string alias);

   ///////////////////////////////////////////////////////////////////
   /// @fn getTiles
   ///////////////////////////////////////////////////////////////////
   std::vector<TileModel> getTiles();

   ///////////////////////////////////////////////////////////////////
   /// @fn getWallAtPosition
   ///
   /// @param position
   ///////////////////////////////////////////////////////////////////
   TileModel getTileAtPosition(PositionModel position);

   ///////////////////////////////////////////////////////////////////
   /// @fn getWallWithAlias
   ///
   /// @param alias
   ///////////////////////////////////////////////////////////////////
   TileModel getTileWithAlias(std::string alias);

   ///////////////////////////////////////////////////////////////////
   /// @fn setWallAtPosition
   ///
   /// @param wall
   ///////////////////////////////////////////////////////////////////
   void addTile(TileModel tile);
};

#endif
