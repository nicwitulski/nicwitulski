#ifndef SPRITE_H
#define SPRITE_H

#include "PixelModel.h"
#include "PositionModel.h"
#include <string>
#include <vector>

class SpriteModel
{
private:
   ///////////////////////////////////////////////////////////////////
   /// @fn setMaxPosition
   ///////////////////////////////////////////////////////////////////
   void setMaxPosition();

   ///////////////////////////////////////////////////////////////////
   /// @fn setMaxPosition
   ///
   /// @param position
   ///////////////////////////////////////////////////////////////////
   void setMaxPosition(PositionModel candidate);

   ///////////////////////////////////////////////////////////////////
   /// @fn setMaxPosition
   ///////////////////////////////////////////////////////////////////
   void setMiddlePixel();

   ///////////////////////////////////////////////////////////////////
   /// @fn getPixelIndexAtPosition
   ///
   /// @param position
   ///////////////////////////////////////////////////////////////////
   int getPixelIndexAtPosition(PositionModel position);

public:
   ///////////////////////////////////////////////////////////////////
   /// @fn SpriteModel
   ///////////////////////////////////////////////////////////////////
   SpriteModel();

   ///////////////////////////////////////////////////////////////////
   /// @fn SpriteModel
   ///
   /// @param contents
   /// @param positions
   ///////////////////////////////////////////////////////////////////
   SpriteModel(std::vector<PixelModel> pixels);

   ///////////////////////////////////////////////////////////////////
   /// @fn getPixels
   ///////////////////////////////////////////////////////////////////
   std::vector<PixelModel> getPixels();

   ///////////////////////////////////////////////////////////////////
   /// @fn getPixelAtPosition
   ///////////////////////////////////////////////////////////////////
   PixelModel getPixelAtPosition(PositionModel position);

   ///////////////////////////////////////////////////////////////////
   /// @fn getSpriteSize
   ///////////////////////////////////////////////////////////////////
   int getSpriteSize();

   ///////////////////////////////////////////////////////////////////
   /// @fn getMaxPosition
   ///////////////////////////////////////////////////////////////////
   PositionModel getMaxPosition();

   ///////////////////////////////////////////////////////////////////
   /// @fn getMiddlePixel
   ///////////////////////////////////////////////////////////////////
   PixelModel getMiddlePixel();

   ///////////////////////////////////////////////////////////////////
   /// @fn setSprite
   ///
   /// @param contents
   /// @param positions
   ///////////////////////////////////////////////////////////////////
   void editSprite(std::vector<PixelModel> pixels, bool overwrite);

   ///////////////////////////////////////////////////////////////////
   /// @fn resetSprite
   ///////////////////////////////////////////////////////////////////
   void resetSprite();

   ///////////////////////////////////////////////////////////////////
   /// @fn setPixelAtPosition
   ///
   /// @param position
   /// @param character
   ///////////////////////////////////////////////////////////////////
   void setPixelAtPosition(PositionModel position, char character);

   ///////////////////////////////////////////////////////////////////
   /// @fn addPixel
   ///
   /// @param pixel
   ///////////////////////////////////////////////////////////////////
   void addPixel(PixelModel pixel);

   ///////////////////////////////////////////////////////////////////
   /// @fn moveUp
   ///////////////////////////////////////////////////////////////////
   void moveUp();

   ///////////////////////////////////////////////////////////////////
   /// @fn moveDown
   ///////////////////////////////////////////////////////////////////
   void moveDown();

   ///////////////////////////////////////////////////////////////////
   /// @fn moveLeft
   ///////////////////////////////////////////////////////////////////
   void moveLeft();

   ///////////////////////////////////////////////////////////////////
   /// @fn moveRight
   ///////////////////////////////////////////////////////////////////
   void moveRight();
};

#endif
